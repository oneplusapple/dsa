#include<stdio.h> 
#include<stdlib.h> 
struct BST { 
	int info; 
	struct BST *lptr,*rptr; 
}; 
typedef struct BST node; 
node *root=NULL; 
void inorder(node *root) {  
	if(root!=NULL) { 
		inorder(root->lptr); 
		printf("%d\n",root->info);   
		inorder(root->rptr); 
	} 
} 
void preorder(node *root) {  
	if(root!=NULL) { 
		printf("%d\n",root->info); 
		preorder(root->lptr); 
		preorder(root->rptr); 
	} 
} 
void postorder(node *root) { 
	if(root!=NULL) { 
		postorder(root->lptr); 
		postorder(root->rptr); 
		printf("%d\n",root->info); 
	} 
} 
node *insert(node *root,int key) { 
	if(root==NULL) { 
		root=(node*)malloc(sizeof(node)); 
		root->lptr=root->rptr=NULL; 
		root->info=key; 
		return root; 
	} 
	if(key<root->info) { 
		root->lptr=insert(root->lptr,key); 
	} 
	else if(key>root->info) 
	{ 
		root->rptr=insert(root->rptr,key); 
	} 
	else if(key==root->info) { 
		printf("\nNO DUPLICATES ARE ALLOWED"); 
	} 
	return root; 
} 
int search(node *root,int key) { 
	while(root!=NULL) { 
		if(key<root->info) { 
			return search(root->lptr,key); 
		} 
		else if(key>root->info) { 
			return search(root->rptr,key); 
		} 
		else 
			return 1; 
	}   
	return 0;   
} 
void main() { 
	int i,n,key,ch,flag; 
	while(1) { 
		printf("\n enter the choice\n"); 
		printf("1.insert\t2.search\t3.inorder\t4.preorder\t5.postoder\n"); 
		scanf("%d",&ch); 
		switch(ch) { 
			case 1:printf("\n enter the n value\n"); 
				scanf("%d",&n); 
				printf("\n enter the %d key values\n",n); 
				for(i=0;i<n;i++) { 
					scanf("%d",&key); 
					root=insert(root,key); 
				} 
				break; 
			case 2:printf("\n enter the key value\n"); 
				scanf("%d",&key); 
	    		flag=search(root,key); 
	    		if(flag==1) 
	    			printf("ele found\n"); 
	    		else 
	    			printf("ele not found\n"); 
	    		break; 
	   		case 3:inorder(root);break; 
	   		case 4:preorder(root);break; 
	   		case 5:postorder(root);break; 
	   		default:printf("enter the correct choice\n");break;  
	  	} 
 	} 
}
